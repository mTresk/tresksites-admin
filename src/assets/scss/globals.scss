@use 'sass:math';

$mainColor: #242642;
$grayColor: #7a7b84;
$accentColor: #6974f6;
$greenColor: #25b364;
$redColor: #ea5455;
$whiteColor: #fff;
$darkColor: #1a1a1a;
$blackColor: #09090b;
$darkBorderColor: #5f5f5f;
$darkPlaceholderColor: #ffffffb1;
$minWidth: 375;
$maxWidth: 1920;
$maxWidthContainer: 1200;
$containerPadding: 40;
$containerWidth: $maxWidthContainer + $containerPadding;

// REM
@function rem($px) {
	$result: math.div($px, 16) + rem;

	@return $result;
}

// EM
@function em($px, $current: 16) {
	$result: math.div($px, $current) + em;

	@return $result;
}

// Адаптивное свойство (clamp)
@mixin adaptiveValue($property, $startSize, $minSize, $keepSize: 0, $widthFrom: $containerWidth, $widthTo: $minWidth) {
	@if $startSize == 0 {
		$startSize: 0.0001;
	}

	@if $minSize == 0 {
		$minSize: 0.0001;
	}

	// Для calc();
	$addSize: math.div($startSize - $minSize, 16);

	@if $widthFrom == $containerWidth and $maxWidthContainer == 0 {
		$widthFrom: $maxWidth;
	}

	// Брейк-поинты в EM
	$widthFromMedia: em($widthFrom);
	$widthToMedia: em($widthTo);

	// Формула плавающего значения
	// Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/
	$slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));
	$yIntersection: -$widthTo * $slope + $minSize;

	@if $yIntersection == 0 {
		$yIntersection: 0.0001;
	}

	$flyValue: #{rem($yIntersection)}' + ' #{$slope * 100}vw;

	// Получение значения свойства
	$propertyValue: #{'clamp(' rem($minSize) ',' $flyValue ',' rem($startSize) ')'};

	// Если отрицательные значения
	@if $minSize > $startSize {
		$propertyValue: #{'clamp(' rem($startSize) ',' $flyValue ',' rem($minSize) ')'};
	}

	// Устанавливаем значения по умолчанию
	@if $keepSize != 1 and $keepSize != 3 {
		@media (min-width: $widthFromMedia) {
			#{$property}: rem($startSize);
		}
	}

	// Адаптируем размер в промежутке между указанными ширинами вьюпорта
	@media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {
		// Если поддерживается clamp();
		@supports (#{$property}: $propertyValue) {
			#{$property}: $propertyValue;
		}

		// Если не поддерживается clamp();
		@supports not (#{$property}: $propertyValue) {
			#{$property}: calc(
				#{rem($minSize)} + #{$addSize} * (100vw - #{rem($widthTo)}) / #{math.div($widthFrom, 16) - math.div(
						$widthTo,
						16
					)}
			);
		}
	}

	@if $keepSize != 1 and $keepSize != 2 {
		@media (max-width: $widthToMedia) {
			#{$property}: rem($minSize);
		}
	}
}

$pc: em($containerWidth);
$tablet: em(991.98);
$mobile: em(767.98);
$mobileSmall: em(479.98);
