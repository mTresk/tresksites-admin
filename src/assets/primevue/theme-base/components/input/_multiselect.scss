@use 'sass:math';

.p-multiselect {
	background: $inputBg;
	border: $inputBorder;
	transition: $formElementTransition;
	border-radius: $borderRadius;

	.dark & {
		background: #5f5f5f;
		border-color: #5f5f5f;
	}

	&:not(.p-disabled):hover {
		border-color: $inputHoverBorderColor;
	}

	&:not(.p-disabled).p-focus {
		@include focused-input();
	}

	.p-multiselect-label {
		padding: $inputPadding;
		transition: $formElementTransition;

		&.p-placeholder {
			color: $inputPlaceholderTextColor;
		}
	}

	&.p-multiselect-chip {
		.p-multiselect-token {
			padding: math.div(nth($inputPadding, 1), 2) nth($inputPadding, 2);
			margin-right: $inlineSpacing;
			background: $chipBg;
			color: $chipTextColor;
			border-radius: $chipBorderRadius;

			.p-multiselect-token-icon {
				margin-left: $inlineSpacing;
			}
		}
	}

	.p-multiselect-trigger {
		background: transparent;
		color: $inputIconColor;
		width: $inputGroupAddOnMinWidth;
		border-top-right-radius: $borderRadius;
		border-bottom-right-radius: $borderRadius;

		.dark & {
			color: #fff;
		}
	}

	&.p-invalid.p-component {
		@include invalid-input();
	}
}

.p-inputwrapper-filled {
	&.p-multiselect {
		&.p-multiselect-chip {
			.p-multiselect-label {
				padding: math.div(nth($inputPadding, 1), 2) nth($inputPadding, 2);
			}
		}
	}
}

.p-multiselect-panel {
	background: $inputOverlayBg;
	color: $inputListTextColor;
	border: $inputOverlayBorder;
	border-radius: $borderRadius;
	box-shadow: $inputOverlayShadow;

	.dark & {
		background-color: #5f5f5f;
	}

	.p-multiselect-header {
		padding: $inputListHeaderPadding;
		border-bottom: $inputListHeaderBorder;
		color: $inputListHeaderTextColor;
		background: $inputOverlayHeaderBg;
		margin: $inputListHeaderMargin;
		border-top-right-radius: $borderRadius;
		border-top-left-radius: $borderRadius;

		.p-multiselect-filter-container {
			.p-inputtext {
				padding-right: nth($inputPadding, 2) + $primeIconFontSize;
			}

			.p-multiselect-filter-icon {
				right: nth($inputPadding, 2);
				color: $inputIconColor;

				.dark & {
					color: #fff;
				}
			}
		}

		.p-checkbox {
			margin-right: $inlineSpacing;
		}

		.p-multiselect-close {
			margin-left: $inlineSpacing;
			@include action-icon();
		}

		.dark & {
			background: #ffffffb1;
		}
	}

	.p-multiselect-items {
		padding: $inputListPadding;

		.p-multiselect-item {
			margin: $inputListItemMargin;
			padding: $inputListItemPadding;
			border: $inputListItemBorder;
			color: $inputListItemTextColor;
			background: $inputListItemBg;
			transition: $listItemTransition;
			border-radius: $inputListItemBorderRadius;

			&.p-highlight {
				color: $highlightTextColor;
				background: $highlightBg;

				.dark & {
					background: #ffffffb1;
				}

				&.p-focus {
					background: $highlightFocusBg;

					.dark & {
						background: #ffffffb1;
					}
				}

				.dark & {
					background: #ffffffb1;
				}
			}

			&:not(.p-highlight):not(.p-disabled) {
				&.p-focus {
					color: $inputListItemTextFocusColor;
					background: $inputListItemFocusBg;
				}

				&:hover {
					color: $inputListItemTextHoverColor;
					background: $inputListItemHoverBg;

					.dark & {
						background: #ffffffb1;
						color: #fff;
					}
				}
			}

			.p-checkbox {
				margin-right: $inlineSpacing;
			}

			.dark & {
				color: #fff;
			}
		}

		.p-multiselect-item-group {
			margin: $submenuHeaderMargin;
			padding: $submenuHeaderPadding;
			color: $submenuHeaderTextColor;
			background: $submenuHeaderBg;
			font-weight: $submenuHeaderFontWeight;
		}

		.p-multiselect-empty-message {
			padding: $inputListItemPadding;
			color: $inputListItemTextColor;
			background: $inputListItemBg;

			.dark & {
				color: #fff;
			}
		}
	}
}

.p-input-filled {
	.p-multiselect {
		background: $inputFilledBg;

		&:not(.p-disabled):hover {
			background-color: $inputFilledHoverBg;
		}

		&:not(.p-disabled).p-focus {
			background-color: $inputFilledFocusBg;
		}
	}
}
